{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///./lib/features/zoom/index.js?280e","webpack:///./lib/features/zoom/Zoom.js?59c3","webpack:///./lib/InteractiveViewer.js","webpack:///./lib/features/tooltip/index.js","webpack:///./lib/features/tooltip/Tooltip.js","webpack:///./~/d3-tip/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;ACVA;AACA;AACA;AACA,G;;;;;;;ACHA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,UAAU;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,G;;;;;;;AC5EA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;;AAEA,mBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,G;;;;;;;AC5BA;AACA;AACA;AACA,G;;;;;;;ACHA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;;AAEA;;AAEA,0B;;;;;;;AC5CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,sCAAsC;;AAEtD;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,uCAAuC;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC;AACjC,+BAA8B;AAC9B,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;;AAEA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAC","file":"D3P.InteractiveViewer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"D3P\"] = factory();\n\telse\n\t\troot[\"D3P\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","module.exports = {\r\n  __init__: [ 'zoom' ],\r\n  zoom: [ 'type', require('./Zoom') ]\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/features/zoom/index.js\n// module id = 735\n// module chunks = 0 1","'use strict';\r\n\r\nvar d3 = require('d3'),\r\n  isUndefined = require('lodash/lang').isUndefined,\r\n  _isZoomable = false,\r\n  _zoom = null\r\n  ;\r\n\r\n/**\r\n * The zoom functionality.\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @param {Object} options\r\n * @param {Canvas} canvas\r\n * @param {GridLines} gridLines\r\n */\r\nfunction Zoom(options, canvas, eventBus) {\r\n  this._canvas = canvas;\r\n  this._eventBus = eventBus;\r\n\r\n  init.apply(this, [options.translateX, options.translateY, options.scale]);\r\n\r\n  this.setZoomable(!!options.isZoomable);\r\n  this.setZoom(options.translateX, options.translateY, options.scale, options.scale);\r\n}\r\n\r\nZoom.$inject = [ 'd3polytree.options', 'canvas', 'eventBus' ];\r\n\r\nmodule.exports = Zoom;\r\n\r\nZoom.prototype.setZoom = function(translateX, translateY, scale){\r\n  if (_isZoomable === true) {\r\n\r\n    var currentTransform = this._canvas.getTransform();\r\n\r\n    translateX = !isUndefined(translateX) ? translateX : currentTransform.e;\r\n\r\n    translateY = !isUndefined(translateY) ? translateY : currentTransform.f;\r\n\r\n    scale = !isUndefined(scale) ? scale : currentTransform.a;\r\n\r\n    // apply transform\r\n    this._canvas.getDrawingLayer()\r\n      .attr('transform', 'translate(' + translateX + ', ' + translateY + ') scale(' + scale + ')');\r\n\r\n    this._eventBus.emit('canvas.zoomed');\r\n  }\r\n};\r\n\r\nZoom.prototype.setZoomable = function(isZoomable){\r\n  _isZoomable = isZoomable;\r\n};\r\n\r\nvar init = function(tX, tY, s){\r\n  var drawingLayer = this._canvas.getDrawingLayer();\r\n  var that = this;\r\n  _zoom = d3\r\n    .zoom()\r\n    .scaleExtent([0.1, 15])\r\n    .on('zoom', function(){\r\n      if (!_isZoomable) return true;\r\n      // on zoom event\r\n      var trans = d3.event.transform;\r\n      that.setZoom(trans.x, trans.y, trans.k);\r\n    });\r\n\r\n  drawingLayer = drawingLayer\r\n    .call(_zoom)\r\n    .call(_zoom.transform, d3.zoomIdentity\r\n      .translate(tX, tY)\r\n      .scale(s))\r\n    .append('g');\r\n\r\n  this._canvas.setDrawingLayer(drawingLayer);\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/features/zoom/Zoom.js\n// module id = 736\n// module chunks = 0 1","'use strict';\r\n\r\nvar inherits = require('inherits');\r\n\r\nvar Viewer = require('./Viewer').Viewer;\r\n\r\n\r\n/**\r\n * A viewer that includes user interactions\r\n *\r\n * @param {Object} options\r\n */\r\nfunction InteractiveViewer(options) {\r\n  Viewer.call(this, options);\r\n}\r\n\r\ninherits(InteractiveViewer, Viewer);\r\n\r\nmodule.exports = {InteractiveViewer: InteractiveViewer};\r\n\r\nInteractiveViewer.prototype._interactionModules = [\r\n  require('./features/zoom'),\r\n  require('./features/tooltip')\r\n];\r\n\r\nInteractiveViewer.prototype._modules = [].concat(\r\n  InteractiveViewer.prototype._modules,\r\n  InteractiveViewer.prototype._interactionModules\r\n);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/InteractiveViewer.js\n// module id = 737\n// module chunks = 1","module.exports = {\r\n  __init__: [ 'tooltip' ],\r\n  tooltip: [ 'type', require('./Tooltip') ]\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/features/tooltip/index.js\n// module id = 738\n// module chunks = 1","'use strict';\r\n\r\nvar d3js = require('d3'),\r\n  _d3tip = require('d3-tip'),\r\n  _tooltip = null,\r\n  isEmpty = require('lodash/lang').isEmpty;\r\n\r\n/**\r\n * The tooltip functionality.\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @param {Canvas} Canvas\r\n * @param {EventBus} EventBus\r\n */\r\nfunction Tooltip(canvas, eventBus) {\r\n  d3js.functor = function functor(v) {\r\n    // legacy function: https://bl.ocks.org/micahstubbs/f94ee71c353f0152da3bc2ee4351608d#d3-tip.js\r\n    return typeof v === 'function' ? v : function() {\r\n      return v;\r\n    };\r\n  };\r\n  _tooltip = _d3tip(d3js)\r\n    .attr('class', 'd3-tip')\r\n    .offset([-10, 0])\r\n    .html(function(d) {\r\n      return isEmpty(d.label)?'':d.label;\r\n    });\r\n  canvas.getDrawingLayer().call(_tooltip);\r\n  eventBus.on('groupLabel.mouseover', function(){\r\n    // show tooltip on groups\r\n    var zoom = canvas.getTransform().a;\r\n    if (zoom < 0.8){\r\n      _tooltip.show.apply(this, arguments);\r\n    }\r\n  });\r\n  eventBus.on('groupLabel.mouseout', function(){\r\n    _tooltip.hide();\r\n  });\r\n}\r\n\r\nTooltip.$inject = [ 'canvas', 'eventBus' ];\r\n\r\nmodule.exports = Tooltip;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/features/tooltip/Tooltip.js\n// module id = 739\n// module chunks = 1","// d3.tip\n// Copyright (c) 2013 Justin Palmer\n//\n// Tooltips for d3.js SVG visualizations\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module with d3 as a dependency.\n    define(['d3'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS\n    module.exports = function(d3) {\n      d3.tip = factory(d3)\n      return d3.tip\n    }\n  } else {\n    // Browser global.\n    root.d3.tip = factory(root.d3)\n  }\n}(this, function (d3) {\n\n  // Public - contructs a new tooltip\n  //\n  // Returns a tip\n  return function() {\n    var direction = d3_tip_direction,\n        offset    = d3_tip_offset,\n        html      = d3_tip_html,\n        node      = initNode(),\n        svg       = null,\n        point     = null,\n        target    = null\n\n    function tip(vis) {\n      svg = getSVGNode(vis)\n      point = svg.createSVGPoint()\n      document.body.appendChild(node)\n    }\n\n    // Public - show the tooltip on the screen\n    //\n    // Returns a tip\n    tip.show = function() {\n      var args = Array.prototype.slice.call(arguments)\n      if(args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n      var content = html.apply(this, args),\n          poffset = offset.apply(this, args),\n          dir     = direction.apply(this, args),\n          nodel   = getNodeEl(),\n          i       = directions.length,\n          coords,\n          scrollTop  = document.documentElement.scrollTop || document.body.scrollTop,\n          scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft\n\n      nodel.html(content)\n        .style({ opacity: 1, 'pointer-events': 'all' })\n\n      while(i--) nodel.classed(directions[i], false)\n      coords = direction_callbacks.get(dir).apply(this)\n      nodel.classed(dir, true).style({\n        top: (coords.top +  poffset[0]) + scrollTop + 'px',\n        left: (coords.left + poffset[1]) + scrollLeft + 'px'\n      })\n\n      return tip\n    }\n\n    // Public - hide the tooltip\n    //\n    // Returns a tip\n    tip.hide = function() {\n      var nodel = getNodeEl()\n      nodel.style({ opacity: 0, 'pointer-events': 'none' })\n      return tip\n    }\n\n    // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n    //\n    // n - name of the attribute\n    // v - value of the attribute\n    //\n    // Returns tip or attribute value\n    tip.attr = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().attr(n)\n      } else {\n        var args =  Array.prototype.slice.call(arguments)\n        d3.selection.prototype.attr.apply(getNodeEl(), args)\n      }\n\n      return tip\n    }\n\n    // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n    //\n    // n - name of the property\n    // v - value of the property\n    //\n    // Returns tip or style property value\n    tip.style = function(n, v) {\n      if (arguments.length < 2 && typeof n === 'string') {\n        return getNodeEl().style(n)\n      } else {\n        var args =  Array.prototype.slice.call(arguments)\n        d3.selection.prototype.style.apply(getNodeEl(), args)\n      }\n\n      return tip\n    }\n\n    // Public: Set or get the direction of the tooltip\n    //\n    // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n    //     sw(southwest), ne(northeast) or se(southeast)\n    //\n    // Returns tip or direction\n    tip.direction = function(v) {\n      if (!arguments.length) return direction\n      direction = v == null ? v : d3.functor(v)\n\n      return tip\n    }\n\n    // Public: Sets or gets the offset of the tip\n    //\n    // v - Array of [x, y] offset\n    //\n    // Returns offset or\n    tip.offset = function(v) {\n      if (!arguments.length) return offset\n      offset = v == null ? v : d3.functor(v)\n\n      return tip\n    }\n\n    // Public: sets or gets the html value of the tooltip\n    //\n    // v - String value of the tip\n    //\n    // Returns html value or tip\n    tip.html = function(v) {\n      if (!arguments.length) return html\n      html = v == null ? v : d3.functor(v)\n\n      return tip\n    }\n\n    // Public: destroys the tooltip and removes it from the DOM\n    //\n    // Returns a tip\n    tip.destroy = function() {\n      if(node) {\n        getNodeEl().remove();\n        node = null;\n      }\n      return tip;\n    }\n\n    function d3_tip_direction() { return 'n' }\n    function d3_tip_offset() { return [0, 0] }\n    function d3_tip_html() { return ' ' }\n\n    var direction_callbacks = d3.map({\n      n:  direction_n,\n      s:  direction_s,\n      e:  direction_e,\n      w:  direction_w,\n      nw: direction_nw,\n      ne: direction_ne,\n      sw: direction_sw,\n      se: direction_se\n    }),\n\n    directions = direction_callbacks.keys()\n\n    function direction_n() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.n.y - node.offsetHeight,\n        left: bbox.n.x - node.offsetWidth / 2\n      }\n    }\n\n    function direction_s() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.s.y,\n        left: bbox.s.x - node.offsetWidth / 2\n      }\n    }\n\n    function direction_e() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.e.y - node.offsetHeight / 2,\n        left: bbox.e.x\n      }\n    }\n\n    function direction_w() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.w.y - node.offsetHeight / 2,\n        left: bbox.w.x - node.offsetWidth\n      }\n    }\n\n    function direction_nw() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.nw.y - node.offsetHeight,\n        left: bbox.nw.x - node.offsetWidth\n      }\n    }\n\n    function direction_ne() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.ne.y - node.offsetHeight,\n        left: bbox.ne.x\n      }\n    }\n\n    function direction_sw() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.sw.y,\n        left: bbox.sw.x - node.offsetWidth\n      }\n    }\n\n    function direction_se() {\n      var bbox = getScreenBBox()\n      return {\n        top:  bbox.se.y,\n        left: bbox.e.x\n      }\n    }\n\n    function initNode() {\n      var node = d3.select(document.createElement('div'))\n      node.style({\n        position: 'absolute',\n        top: 0,\n        opacity: 0,\n        'pointer-events': 'none',\n        'box-sizing': 'border-box'\n      })\n\n      return node.node()\n    }\n\n    function getSVGNode(el) {\n      el = el.node()\n      if(el.tagName.toLowerCase() === 'svg')\n        return el\n\n      return el.ownerSVGElement\n    }\n\n    function getNodeEl() {\n      if(node === null) {\n        node = initNode();\n        // re-add node to DOM\n        document.body.appendChild(node);\n      };\n      return d3.select(node);\n    }\n\n    // Private - gets the screen coordinates of a shape\n    //\n    // Given a shape on the screen, will return an SVGPoint for the directions\n    // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n    // sw(southwest).\n    //\n    //    +-+-+\n    //    |   |\n    //    +   +\n    //    |   |\n    //    +-+-+\n    //\n    // Returns an Object {n, s, e, w, nw, sw, ne, se}\n    function getScreenBBox() {\n      var targetel   = target || d3.event.target;\n\n      while ('undefined' === typeof targetel.getScreenCTM && 'undefined' === targetel.parentNode) {\n          targetel = targetel.parentNode;\n      }\n\n      var bbox       = {},\n          matrix     = targetel.getScreenCTM(),\n          tbbox      = targetel.getBBox(),\n          width      = tbbox.width,\n          height     = tbbox.height,\n          x          = tbbox.x,\n          y          = tbbox.y\n\n      point.x = x\n      point.y = y\n      bbox.nw = point.matrixTransform(matrix)\n      point.x += width\n      bbox.ne = point.matrixTransform(matrix)\n      point.y += height\n      bbox.se = point.matrixTransform(matrix)\n      point.x -= width\n      bbox.sw = point.matrixTransform(matrix)\n      point.y -= height / 2\n      bbox.w  = point.matrixTransform(matrix)\n      point.x += width\n      bbox.e = point.matrixTransform(matrix)\n      point.x -= width / 2\n      point.y -= height / 2\n      bbox.n = point.matrixTransform(matrix)\n      point.y += height\n      bbox.s = point.matrixTransform(matrix)\n\n      return bbox\n    }\n\n    return tip\n  };\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3-tip/index.js\n// module id = 740\n// module chunks = 1"],"sourceRoot":""}